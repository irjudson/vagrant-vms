# -*- mode: ruby -*-
# vi: set ft=ruby 
require 'etc'

$azure_install = <<SCRIPT
hostname $1
echo HOST_NAME=\\"$1\\" >> /etc/environment
echo MQTT_HOST_NAME=\\"$1\\" >> /etc/environment
echo ADMIN_API_KEY=\\"admin\\" >> /etc/environment
echo ADMIN_REDIRECT_ROOT=\\"http://$1:9000\\" >> /etc/environment
SCRIPT

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 3030, host: 3030
  config.vm.network "forwarded_port", guest: 9000, host: 9000

  # SSH configuration
  config.ssh.username = 'vagrant'
  # config.ssh.password = 'V8gr@nt'
  # config.ssh.insert_key = true
  # config.ssh.private_key_path = ENV['NITROGEN_KEY'] || 'NitrogenPrivateKey.key'

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  
  # VirtualBox:
  config.vm.provider :virtualbox do |virtualbox|
    virtualbox.memory = 1024
  end

  # Parallels:
  config.vm.provider :parallels do |parallels, override|
    parallels.memory = 1024
    parallels.update_guest_tools = true
    override.vm.box = "parallels/ubuntu-14.04"
    override.vm.box_url = "https://vagrantcloud.com/parallels/ubuntu-14.04"
    # Bug in parallels provider https://github.com/Parallels/vagrant-parallels/issues/124
    override.vm.synced_folder "./", "/vagrant", id: "some_id"
    #parallels.customize ["set", :id, "--on-window-close",  "keep-running"]
  end

  # Where to go to get started
  config.vm.post_up_message = "Open a browser to http://localhost:9000/ to get started."
  
  # Azure:
  config.vm.provider :azure do |azure, override|
    override.vm.box = "azure"
    azure.mgmt_certificate = ENV['AZURE_MANAGEMENT_CERT']
    azure.mgmt_endpoint = 'https://management.core.windows.net'
    azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']
    azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_1-LTS-amd64-server-20140909-en-us-30GB'
    azure.vm_size = "Medium"
    azure.vm_user = 'vagrant'
    azure.vm_password = 'V8gr@nt'
    azure.vm_name = ENV['NITROGEN_VM_NAME']
    azure.cloud_service_name = azure.vm_name
    azure.deployment_name = "deployment-0"
    azure.vm_location = 'West US'
    azure.ssh_private_key_file = ENV['NITROGEN_KEY'] || 'NitrogenPrivateKey.key'
    azure.ssh_certificate_file = ENV['NITROGEN_CERT'] || 'NitrogenCert.pem'
    azure.ssh_port = '22'
    azure.tcp_endpoints = '3030,9000'
    override.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__exclude: [".vagrant/", ".git/", ".gitignore", "*.pem", "*.key", "*.cert"]
    override.vm.post_up_message = "Open a browser to http://#{ENV['NITROGEN_VM_NAME']}.cloudapp.net:9000/ to get started."
    override.vm.provision :shell, :inline => $azure_install, :args => "#{ENV['NITROGEN_VM_NAME']}.cloudapp.net"
  end

  # Provision (install software) on the machine
  config.vm.provision :shell, :path => "install.sh"
  config.vm.provision :shell, :path => "nitrogen.sh"
end
